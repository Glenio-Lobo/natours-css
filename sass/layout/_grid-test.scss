@use '../abstracts/variables' as var;
@use '../abstracts/mixins' as mixins;
@use '../abstracts/functions' as functions;

.row {
    max-width: var.$grid-width;
    margin: 0 auto;

    
    @include mixins.clearfix;
    
    @include mixins.responsive(tab-port){
        max-width: var.$grid-width-small;
        // padding: 0 3rem;
    }

    &:not(:last-child){
        margin-bottom: var.$gutter-vertical;

        @include mixins.responsive(tab-port){
            margin-bottom: var.$gutter-vertical-small;
        }
    }

    div[class^="col-"]{
        float: left;
        // background-color: orangered;

        &:not(:last-child){
            margin-right: var.$gutter-horizontal;

            @include mixins.responsive(tab-port){
                margin-right: 0;
                margin-bottom: var.$gutter-vertical-small;
            }
        }

        @include mixins.responsive(tab-port){
            width: 100% !important;
        }
    }

    .col-1-of-2{
        // width: calc((100% - #{var.$gutter-horizontal})/2);
        width: functions.colWidthCalculator(1, 2);
    }

    .col-1-of-3{
        // width: calc((100% - 2 * #{var.$gutter-horizontal})/3); 
        width: functions.colWidthCalculator(1, 3);
    }

    .col-2-of-3{
        // width: calc(2*( (100% - 2 * #{var.$gutter-horizontal})/3 ) + var.$gutter-horizontal);  
        width: functions.colWidthCalculator(2, 3);
    }

    .col-1-of-4{
        // width: calc((100% - 3 * #{var.$gutter-horizontal})/4);  
        width: functions.colWidthCalculator(1, 4);
    }

    .col-2-of-4{
        // width: calc(2*( (100% - 3 * #{var.$gutter-horizontal})/4 ) + var.$gutter-horizontal);  
        width: functions.colWidthCalculator(2, 4);
    }

    .col-3-of-4{
        width: functions.colWidthCalculator(3, 4);
    }

    .col-1-of-5{
        width: functions.colWidthCalculator(1, 5);
    }
}